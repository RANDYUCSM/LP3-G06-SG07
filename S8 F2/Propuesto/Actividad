import java.sql.*;


public class GestorPersonaje {


    private static final String DB_URL = "jdbc:sqlite:personajes.db";


    public static void main(String[] args) {
        try (Connection conn = DriverManager.getConnection(DB_URL)) {
            String createTableSQL = "CREATE TABLE IF NOT EXISTS Personaje (" +
                                    "id INTEGER PRIMARY KEY AUTOINCREMENT," +
                                    "nombre TEXT NOT NULL," +
                                    "nivel INTEGER NOT NULL)";
            try (Statement stmt = conn.createStatement()) {
                stmt.execute(createTableSQL);
                System.out.println("Tabla Personaje creada o ya existe.");
            }
        } catch (SQLException e) {
            System.out.println("Error al crear la tabla: " + e.getMessage());
        }


        GestorPersonaje gestor = new GestorPersonaje();


        String[] nombres = {"Guerrero", "Mago", "Arquero"};
        int[] niveles = {1, 5, 10};


        for (int i = 0; i < nombres.length; i++) {
            gestor.insertarPersonaje(nombres[i], niveles[i]);
        }


        gestor.mostrarPersonajes();


        gestor.actualizarPersonaje(1, 2); 
        gestor.borrarPersonaje(3); 


        System.out.println("\nPersonajes después de las modificaciones:");
        gestor.mostrarPersonajes();
    }


    public void insertarPersonaje(String nombre, int nivel) {
        String insertSQL = "INSERT INTO Personaje (nombre, nivel) VALUES (?, ?)";
        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement pstmt = conn.prepareStatement(insertSQL)) {
            pstmt.setString(1, nombre);
            pstmt.setInt(2, nivel);
            pstmt.executeUpdate();
            System.out.println("Personaje insertado con éxito: " + nombre);
        } catch (SQLException e) {
            System.out.println("Error al insertar personaje: " + e.getMessage());
        }
    }


    public void recuperarPersonaje(int id) {
        String selectSQL = "SELECT * FROM Personaje WHERE id = ?";
        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement pstmt = conn.prepareStatement(selectSQL)) {
            pstmt.setInt(1, id);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                System.out.println("ID: " + rs.getInt("id"));
                System.out.println("Nombre: " + rs.getString("nombre"));
                System.out.println("Nivel: " + rs.getInt("nivel"));
            } else {
                System.out.println("Personaje no encontrado.");
            }
        } catch (SQLException e) {
            System.out.println("Error al recuperar personaje: " + e.getMessage());
        }
    }


    public void actualizarPersonaje(int id, int nuevoNivel) {
        String updateSQL = "UPDATE Personaje SET nivel = ? WHERE id = ?";
        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement pstmt = conn.prepareStatement(updateSQL)) {
            pstmt.setInt(1, nuevoNivel);
            pstmt.setInt(2, id);
            int rowsAffected = pstmt.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Personaje actualizado con éxito.");
            } else {
                System.out.println("Personaje no encontrado.");
            }
        } catch (SQLException e) {
            System.out.println("Error al actualizar personaje: " + e.getMessage());
        }
    }


    public void borrarPersonaje(int id) {
        String deleteSQL = "DELETE FROM Personaje WHERE id = ?";
        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement pstmt = conn.prepareStatement(deleteSQL)) {
            pstmt.setInt(1, id);
            int rowsAffected = pstmt.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Personaje borrado con éxito.");
            } else {
                System.out.println("Personaje no encontrado.");
            }
        } catch (SQLException e) {
            System.out.println("Error al borrar personaje: " + e.getMessage());
        }
    }


    public void mostrarPersonajes() {
        String selectSQL = "SELECT * FROM Personaje";
        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement pstmt = conn.prepareStatement(selectSQL);
             ResultSet rs = pstmt.executeQuery()) {
            while (rs.next()) {
                System.out.println("ID: " + rs.getInt("id"));
                System.out.println("Nombre: " + rs.getString("nombre"));
                System.out.println("Nivel: " + rs.getInt("nivel"));
                System.out.println("------------------------");
            }
        } catch (SQLException e) {
            System.out.println("Error al mostrar personajes: " + e.getMessage());
        }
    }
}
